<?phprequire_once 'SharedContent.php';/** * class User *  */class User{     /** Aggregations: */     /** Compositions: */      /*** Attributes: ***/     /**      *       * @access protected      */     protected $userId;     /**      *       * @access protected      */     protected $active;     /**      *       * @access protected      */     protected $name;     /**      *       * @access protected      */     protected $password;     /**      *       * @access protected      */     protected $sex;     /**      *       * @access protected      */     protected $rating;     /**      *       * @access protected      */     protected $alias;     /**      *       * @access protected      */     protected $about;     /**      *       * @access protected      */     protected $pollEligibility;     /**      *       * @access protected      */     protected $hasBlocked;     /**      *       * @access protected      */     protected $badges;     /**      *       * @access protected      */     protected $LASTLOGIN;     /**      * edit will display a fixed UI whenever a user wants to edit his information. All      * the GUI code along with DB queries has to be placed in it.      *      * @return bool      * @access public      */     public function editInfo() {     } // end of member function editInfo     /**      * Properties which are not passed as parameters to the function are automatically      * generated in the function and content is posted.      *      * @param string postDesc Description of the post      * @param string sharedWith To whom the post is visible      * @param int expiry Post will be automatically deleted after expiry.      * @param bool lifeReq Request for permanent existence of post.      * @return bool      * @access public      */     public function post( $postDesc,  $sharedWith,  $expiry,  $lifeReq) {     } // end of member function post     /**      *       *      * @param string Desc       * @param string shareWith       * @param string eventType       * @return bool      * @access public      */     public function createEvent( $Desc,  $shareWith,  $eventType) {     } // end of member function createEvent     /**      *       *      * @param string topic       * @param string threadTags       * @return bool      * @access public      */     public function createThread( $topic,  $threadTags) {     } // end of member function createThread     /**      *       *      * @param string threadId       * @param string answer       * @return bool      * @access public      */     public function answerThread( $threadId,  $answer) {     } // end of member function answerThread     /**      *       *      * @param string question       * @param string options Will be concatenated and entered(comma seperated)      * @return bool      * @access public      */     public function createPoll( $question,  $options) {     } // end of member function createPoll     /**      *       *      * @return string      * @access public      */     public function getUserId() {          return $this->userId;     } // end of member function getUserId     /**      *       *      * @return bool      * @access public      */     public function getActiveness() {          return $this->active;     } // end of member function getActiveness     /**      *       *      * @return string      * @access public      */     public function getName() {          return $this->name;     } // end of member function getName     /**      *       *      * @return string      * @access public      */     public function getSex() {          return $this->sex;     } // end of member function getSex     /**      *       *      * @return int      * @access public      */     public function getRating() {          return $this->rating;     } // end of member function getRating     /**      *       *      * @return string      * @access public      */     public function getAlias() {          return $this->alias;     } // end of member function getAlias     /**      *       *      * @return string      * @access public      */     public function getAbout() {          return $this->about;     } // end of member function getAbout     /**      *       *      * @return bool      * @access public      */     public function getPollEligibility() {          return $this->pollEligibility;     } // end of member function getPollEligibility     /**      *       *      * @return string      * @access public      */     public function getBlockedUsers() {          return $this->hasBlocked;     } // end of member function getBlockedUsers     /**      *       *      * @return string      * @access public      */     public function getBadges() {          return $this->badges;     } // end of member function getBadges     /**      *       *      * @return string      * @access public      */     public function getLastLogin() {          return $this->lastLogin     } // end of member function getLastLogin     /**      *       *      * @return void      * @access public      */     public function getLatestPost() {     } // end of member function getLatestPost     /**      *       *      * @return void      * @access public      */     public function getImportantPosts() {     } // end of member function getImportantPosts     /**      *       *      * @return void      * @access public      */     public function getPopularPosts() {     } // end of member function getPopularPosts     /**      *       *      * @return void      * @access public      */     public function getEvents() {     } // end of member function getEvents     /**      *       *      * @return void      * @access public      */     public function getPolls() {     } // end of member function getPolls} // end of User?>